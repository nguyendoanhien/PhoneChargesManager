#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Sim")]
	public partial class SimModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertHd(Hd instance);
    partial void UpdateHd(Hd instance);
    partial void DeleteHd(Hd instance);
    partial void InsertSim(Sim instance);
    partial void UpdateSim(Sim instance);
    partial void DeleteSim(Sim instance);
    partial void InsertHdDk(HdDk instance);
    partial void UpdateHdDk(HdDk instance);
    partial void DeleteHdDk(HdDk instance);
    partial void InsertKg(Kg instance);
    partial void UpdateKg(Kg instance);
    partial void DeleteKg(Kg instance);
    partial void InsertKh(Kh instance);
    partial void UpdateKh(Kh instance);
    partial void DeleteKh(Kh instance);
    partial void InsertSd(Sd instance);
    partial void UpdateSd(Sd instance);
    partial void DeleteSd(Sd instance);
    #endregion
		
		public SimModelDataContext() : 
				base(global::DAO.Properties.Settings.Default.SimConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public SimModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SimModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SimModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SimModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Hd> Hds
		{
			get
			{
				return this.GetTable<Hd>();
			}
		}
		
		public System.Data.Linq.Table<Sim> Sims
		{
			get
			{
				return this.GetTable<Sim>();
			}
		}
		
		public System.Data.Linq.Table<HdDk> HdDks
		{
			get
			{
				return this.GetTable<HdDk>();
			}
		}
		
		public System.Data.Linq.Table<Kg> Kgs
		{
			get
			{
				return this.GetTable<Kg>();
			}
		}
		
		public System.Data.Linq.Table<Kh> Khs
		{
			get
			{
				return this.GetTable<Kh>();
			}
		}
		
		public System.Data.Linq.Table<Sd> Sds
		{
			get
			{
				return this.GetTable<Sd>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hd")]
	public partial class Hd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHd;
		
		private System.Nullable<int> _MaKh;
		
		private string _TongTien;
		
		private EntitySet<Sd> _Sds;
		
		private EntityRef<Kh> _Kh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHdChanging(int value);
    partial void OnMaHdChanged();
    partial void OnMaKhChanging(System.Nullable<int> value);
    partial void OnMaKhChanged();
    partial void OnTongTienChanging(string value);
    partial void OnTongTienChanged();
    #endregion
		
		public Hd()
		{
			this._Sds = new EntitySet<Sd>(new Action<Sd>(this.attach_Sds), new Action<Sd>(this.detach_Sds));
			this._Kh = default(EntityRef<Kh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHd", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHd
		{
			get
			{
				return this._MaHd;
			}
			set
			{
				if ((this._MaHd != value))
				{
					this.OnMaHdChanging(value);
					this.SendPropertyChanging();
					this._MaHd = value;
					this.SendPropertyChanged("MaHd");
					this.OnMaHdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKh", DbType="Int")]
		public System.Nullable<int> MaKh
		{
			get
			{
				return this._MaKh;
			}
			set
			{
				if ((this._MaKh != value))
				{
					if (this._Kh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhChanging(value);
					this.SendPropertyChanging();
					this._MaKh = value;
					this.SendPropertyChanged("MaKh");
					this.OnMaKhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="VarChar(255)")]
		public string TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hd_Sd", Storage="_Sds", ThisKey="MaHd", OtherKey="MaHd")]
		public EntitySet<Sd> Sds
		{
			get
			{
				return this._Sds;
			}
			set
			{
				this._Sds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kh_Hd", Storage="_Kh", ThisKey="MaKh", OtherKey="MaKh", IsForeignKey=true)]
		public Kh Kh
		{
			get
			{
				return this._Kh.Entity;
			}
			set
			{
				Kh previousValue = this._Kh.Entity;
				if (((previousValue != value) 
							|| (this._Kh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kh.Entity = null;
						previousValue.Hds.Remove(this);
					}
					this._Kh.Entity = value;
					if ((value != null))
					{
						value.Hds.Add(this);
						this._MaKh = value.MaKh;
					}
					else
					{
						this._MaKh = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sds(Sd entity)
		{
			this.SendPropertyChanging();
			entity.Hd = this;
		}
		
		private void detach_Sds(Sd entity)
		{
			this.SendPropertyChanging();
			entity.Hd = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sim")]
	public partial class Sim : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSim;
		
		private string _SoSim;
		
		private System.Nullable<int> _MaHdDk;
		
		private EntitySet<Sd> _Sds;
		
		private EntityRef<HdDk> _HdDk;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSimChanging(int value);
    partial void OnMaSimChanged();
    partial void OnSoSimChanging(string value);
    partial void OnSoSimChanged();
    partial void OnMaHdDkChanging(System.Nullable<int> value);
    partial void OnMaHdDkChanged();
    #endregion
		
		public Sim()
		{
			this._Sds = new EntitySet<Sd>(new Action<Sd>(this.attach_Sds), new Action<Sd>(this.detach_Sds));
			this._HdDk = default(EntityRef<HdDk>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSim
		{
			get
			{
				return this._MaSim;
			}
			set
			{
				if ((this._MaSim != value))
				{
					this.OnMaSimChanging(value);
					this.SendPropertyChanging();
					this._MaSim = value;
					this.SendPropertyChanged("MaSim");
					this.OnMaSimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoSim", DbType="VarChar(255)")]
		public string SoSim
		{
			get
			{
				return this._SoSim;
			}
			set
			{
				if ((this._SoSim != value))
				{
					this.OnSoSimChanging(value);
					this.SendPropertyChanging();
					this._SoSim = value;
					this.SendPropertyChanged("SoSim");
					this.OnSoSimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHdDk", DbType="Int")]
		public System.Nullable<int> MaHdDk
		{
			get
			{
				return this._MaHdDk;
			}
			set
			{
				if ((this._MaHdDk != value))
				{
					if (this._HdDk.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHdDkChanging(value);
					this.SendPropertyChanging();
					this._MaHdDk = value;
					this.SendPropertyChanged("MaHdDk");
					this.OnMaHdDkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sim_Sd", Storage="_Sds", ThisKey="MaSim", OtherKey="MaSim")]
		public EntitySet<Sd> Sds
		{
			get
			{
				return this._Sds;
			}
			set
			{
				this._Sds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HdDk_Sim", Storage="_HdDk", ThisKey="MaHdDk", OtherKey="MaHdDk", IsForeignKey=true)]
		public HdDk HdDk
		{
			get
			{
				return this._HdDk.Entity;
			}
			set
			{
				HdDk previousValue = this._HdDk.Entity;
				if (((previousValue != value) 
							|| (this._HdDk.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HdDk.Entity = null;
						previousValue.Sims.Remove(this);
					}
					this._HdDk.Entity = value;
					if ((value != null))
					{
						value.Sims.Add(this);
						this._MaHdDk = value.MaHdDk;
					}
					else
					{
						this._MaHdDk = default(Nullable<int>);
					}
					this.SendPropertyChanged("HdDk");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sds(Sd entity)
		{
			this.SendPropertyChanging();
			entity.Sim = this;
		}
		
		private void detach_Sds(Sd entity)
		{
			this.SendPropertyChanging();
			entity.Sim = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HdDk")]
	public partial class HdDk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHdDk;
		
		private System.Nullable<int> _MaKh;
		
		private string _ChiPhiDk;
		
		private EntitySet<Sim> _Sims;
		
		private EntityRef<Kh> _Kh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHdDkChanging(int value);
    partial void OnMaHdDkChanged();
    partial void OnMaKhChanging(System.Nullable<int> value);
    partial void OnMaKhChanged();
    partial void OnChiPhiDkChanging(string value);
    partial void OnChiPhiDkChanged();
    #endregion
		
		public HdDk()
		{
			this._Sims = new EntitySet<Sim>(new Action<Sim>(this.attach_Sims), new Action<Sim>(this.detach_Sims));
			this._Kh = default(EntityRef<Kh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHdDk", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHdDk
		{
			get
			{
				return this._MaHdDk;
			}
			set
			{
				if ((this._MaHdDk != value))
				{
					this.OnMaHdDkChanging(value);
					this.SendPropertyChanging();
					this._MaHdDk = value;
					this.SendPropertyChanged("MaHdDk");
					this.OnMaHdDkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKh", DbType="Int")]
		public System.Nullable<int> MaKh
		{
			get
			{
				return this._MaKh;
			}
			set
			{
				if ((this._MaKh != value))
				{
					if (this._Kh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhChanging(value);
					this.SendPropertyChanging();
					this._MaKh = value;
					this.SendPropertyChanged("MaKh");
					this.OnMaKhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChiPhiDk", DbType="VarChar(255)")]
		public string ChiPhiDk
		{
			get
			{
				return this._ChiPhiDk;
			}
			set
			{
				if ((this._ChiPhiDk != value))
				{
					this.OnChiPhiDkChanging(value);
					this.SendPropertyChanging();
					this._ChiPhiDk = value;
					this.SendPropertyChanged("ChiPhiDk");
					this.OnChiPhiDkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HdDk_Sim", Storage="_Sims", ThisKey="MaHdDk", OtherKey="MaHdDk")]
		public EntitySet<Sim> Sims
		{
			get
			{
				return this._Sims;
			}
			set
			{
				this._Sims.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kh_HdDk", Storage="_Kh", ThisKey="MaKh", OtherKey="MaKh", IsForeignKey=true)]
		public Kh Kh
		{
			get
			{
				return this._Kh.Entity;
			}
			set
			{
				Kh previousValue = this._Kh.Entity;
				if (((previousValue != value) 
							|| (this._Kh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kh.Entity = null;
						previousValue.HdDks.Remove(this);
					}
					this._Kh.Entity = value;
					if ((value != null))
					{
						value.HdDks.Add(this);
						this._MaKh = value.MaKh;
					}
					else
					{
						this._MaKh = default(Nullable<int>);
					}
					this.SendPropertyChanged("Kh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sims(Sim entity)
		{
			this.SendPropertyChanging();
			entity.HdDk = this;
		}
		
		private void detach_Sims(Sim entity)
		{
			this.SendPropertyChanging();
			entity.HdDk = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kg")]
	public partial class Kg : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKg;
		
		private System.Nullable<System.TimeSpan> _GioBd;
		
		private System.Nullable<System.TimeSpan> _GioKt;
		
		private string _GiaCuoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKgChanging(int value);
    partial void OnMaKgChanged();
    partial void OnGioBdChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioBdChanged();
    partial void OnGioKtChanging(System.Nullable<System.TimeSpan> value);
    partial void OnGioKtChanged();
    partial void OnGiaCuocChanging(string value);
    partial void OnGiaCuocChanged();
    #endregion
		
		public Kg()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKg", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaKg
		{
			get
			{
				return this._MaKg;
			}
			set
			{
				if ((this._MaKg != value))
				{
					this.OnMaKgChanging(value);
					this.SendPropertyChanging();
					this._MaKg = value;
					this.SendPropertyChanged("MaKg");
					this.OnMaKgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioBd", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioBd
		{
			get
			{
				return this._GioBd;
			}
			set
			{
				if ((this._GioBd != value))
				{
					this.OnGioBdChanging(value);
					this.SendPropertyChanging();
					this._GioBd = value;
					this.SendPropertyChanged("GioBd");
					this.OnGioBdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioKt", DbType="Time")]
		public System.Nullable<System.TimeSpan> GioKt
		{
			get
			{
				return this._GioKt;
			}
			set
			{
				if ((this._GioKt != value))
				{
					this.OnGioKtChanging(value);
					this.SendPropertyChanging();
					this._GioKt = value;
					this.SendPropertyChanged("GioKt");
					this.OnGioKtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaCuoc", DbType="NVarChar(255)")]
		public string GiaCuoc
		{
			get
			{
				return this._GiaCuoc;
			}
			set
			{
				if ((this._GiaCuoc != value))
				{
					this.OnGiaCuocChanging(value);
					this.SendPropertyChanging();
					this._GiaCuoc = value;
					this.SendPropertyChanged("GiaCuoc");
					this.OnGiaCuocChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kh")]
	public partial class Kh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKh;
		
		private string _TenKh;
		
		private string _NgheNghiep;
		
		private string _ChucVu;
		
		private string _DiaChi;
		
		private EntitySet<Hd> _Hds;
		
		private EntitySet<HdDk> _HdDks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhChanging(int value);
    partial void OnMaKhChanged();
    partial void OnTenKhChanging(string value);
    partial void OnTenKhChanged();
    partial void OnNgheNghiepChanging(string value);
    partial void OnNgheNghiepChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public Kh()
		{
			this._Hds = new EntitySet<Hd>(new Action<Hd>(this.attach_Hds), new Action<Hd>(this.detach_Hds));
			this._HdDks = new EntitySet<HdDk>(new Action<HdDk>(this.attach_HdDks), new Action<HdDk>(this.detach_HdDks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKh
		{
			get
			{
				return this._MaKh;
			}
			set
			{
				if ((this._MaKh != value))
				{
					this.OnMaKhChanging(value);
					this.SendPropertyChanging();
					this._MaKh = value;
					this.SendPropertyChanged("MaKh");
					this.OnMaKhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKh", DbType="NVarChar(255)")]
		public string TenKh
		{
			get
			{
				return this._TenKh;
			}
			set
			{
				if ((this._TenKh != value))
				{
					this.OnTenKhChanging(value);
					this.SendPropertyChanging();
					this._TenKh = value;
					this.SendPropertyChanged("TenKh");
					this.OnTenKhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgheNghiep", DbType="NVarChar(255)")]
		public string NgheNghiep
		{
			get
			{
				return this._NgheNghiep;
			}
			set
			{
				if ((this._NgheNghiep != value))
				{
					this.OnNgheNghiepChanging(value);
					this.SendPropertyChanging();
					this._NgheNghiep = value;
					this.SendPropertyChanged("NgheNghiep");
					this.OnNgheNghiepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(255)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(255)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kh_Hd", Storage="_Hds", ThisKey="MaKh", OtherKey="MaKh")]
		public EntitySet<Hd> Hds
		{
			get
			{
				return this._Hds;
			}
			set
			{
				this._Hds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kh_HdDk", Storage="_HdDks", ThisKey="MaKh", OtherKey="MaKh")]
		public EntitySet<HdDk> HdDks
		{
			get
			{
				return this._HdDks;
			}
			set
			{
				this._HdDks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hds(Hd entity)
		{
			this.SendPropertyChanging();
			entity.Kh = this;
		}
		
		private void detach_Hds(Hd entity)
		{
			this.SendPropertyChanging();
			entity.Kh = null;
		}
		
		private void attach_HdDks(HdDk entity)
		{
			this.SendPropertyChanging();
			entity.Kh = this;
		}
		
		private void detach_HdDks(HdDk entity)
		{
			this.SendPropertyChanging();
			entity.Kh = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sd")]
	public partial class Sd : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSd;
		
		private System.Nullable<int> _MaHd;
		
		private System.Nullable<int> _MaSim;
		
		private System.Nullable<System.DateTime> _TgBd;
		
		private System.Nullable<System.DateTime> _TgKt;
		
		private string _TongTien;
		
		private EntityRef<Hd> _Hd;
		
		private EntityRef<Sim> _Sim;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSdChanging(int value);
    partial void OnMaSdChanged();
    partial void OnMaHdChanging(System.Nullable<int> value);
    partial void OnMaHdChanged();
    partial void OnMaSimChanging(System.Nullable<int> value);
    partial void OnMaSimChanged();
    partial void OnTgBdChanging(System.Nullable<System.DateTime> value);
    partial void OnTgBdChanged();
    partial void OnTgKtChanging(System.Nullable<System.DateTime> value);
    partial void OnTgKtChanged();
    partial void OnTongTienChanging(string value);
    partial void OnTongTienChanged();
    #endregion
		
		public Sd()
		{
			this._Hd = default(EntityRef<Hd>);
			this._Sim = default(EntityRef<Sim>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSd", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSd
		{
			get
			{
				return this._MaSd;
			}
			set
			{
				if ((this._MaSd != value))
				{
					this.OnMaSdChanging(value);
					this.SendPropertyChanging();
					this._MaSd = value;
					this.SendPropertyChanged("MaSd");
					this.OnMaSdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHd", DbType="Int")]
		public System.Nullable<int> MaHd
		{
			get
			{
				return this._MaHd;
			}
			set
			{
				if ((this._MaHd != value))
				{
					if (this._Hd.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHdChanging(value);
					this.SendPropertyChanging();
					this._MaHd = value;
					this.SendPropertyChanged("MaHd");
					this.OnMaHdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSim", DbType="Int")]
		public System.Nullable<int> MaSim
		{
			get
			{
				return this._MaSim;
			}
			set
			{
				if ((this._MaSim != value))
				{
					if (this._Sim.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSimChanging(value);
					this.SendPropertyChanging();
					this._MaSim = value;
					this.SendPropertyChanged("MaSim");
					this.OnMaSimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TgBd", DbType="DateTime")]
		public System.Nullable<System.DateTime> TgBd
		{
			get
			{
				return this._TgBd;
			}
			set
			{
				if ((this._TgBd != value))
				{
					this.OnTgBdChanging(value);
					this.SendPropertyChanging();
					this._TgBd = value;
					this.SendPropertyChanged("TgBd");
					this.OnTgBdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TgKt", DbType="DateTime")]
		public System.Nullable<System.DateTime> TgKt
		{
			get
			{
				return this._TgKt;
			}
			set
			{
				if ((this._TgKt != value))
				{
					this.OnTgKtChanging(value);
					this.SendPropertyChanging();
					this._TgKt = value;
					this.SendPropertyChanged("TgKt");
					this.OnTgKtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="VarChar(255)")]
		public string TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hd_Sd", Storage="_Hd", ThisKey="MaHd", OtherKey="MaHd", IsForeignKey=true)]
		public Hd Hd
		{
			get
			{
				return this._Hd.Entity;
			}
			set
			{
				Hd previousValue = this._Hd.Entity;
				if (((previousValue != value) 
							|| (this._Hd.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hd.Entity = null;
						previousValue.Sds.Remove(this);
					}
					this._Hd.Entity = value;
					if ((value != null))
					{
						value.Sds.Add(this);
						this._MaHd = value.MaHd;
					}
					else
					{
						this._MaHd = default(Nullable<int>);
					}
					this.SendPropertyChanged("Hd");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sim_Sd", Storage="_Sim", ThisKey="MaSim", OtherKey="MaSim", IsForeignKey=true)]
		public Sim Sim
		{
			get
			{
				return this._Sim.Entity;
			}
			set
			{
				Sim previousValue = this._Sim.Entity;
				if (((previousValue != value) 
							|| (this._Sim.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sim.Entity = null;
						previousValue.Sds.Remove(this);
					}
					this._Sim.Entity = value;
					if ((value != null))
					{
						value.Sds.Add(this);
						this._MaSim = value.MaSim;
					}
					else
					{
						this._MaSim = default(Nullable<int>);
					}
					this.SendPropertyChanged("Sim");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
